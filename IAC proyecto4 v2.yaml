AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    EC2VPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "10.0.0.0/20"
            EnableDnsSupport: true
            EnableDnsHostnames: true
            InstanceTenancy: "default"
            Tags: 
              - 
                Key: "Name"
                Value: "VPC_onpremise"

    EC2VPC2:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "198.240.0.0/20"
            EnableDnsSupport: true
            EnableDnsHostnames: true
            InstanceTenancy: "default"
            Tags: 
              - 
                Key: "Name"
                Value: "VPC_backup"

    RDSDBInstance:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: !Sub "${CognitoUserPoolDomain}backup"
            AllocatedStorage: 20
            DBInstanceClass: "db.t3.micro"
            Engine: "postgres"
            MasterUsername: "Proyecto4"
            MasterUserPassword: "REPLACEME"
            PreferredBackupWindow: "08:43-09:13"
            BackupRetentionPeriod: 0
            AvailabilityZone: !GetAtt EC2Subnet.AvailabilityZone
            PreferredMaintenanceWindow: "fri:04:58-fri:05:28"
            MultiAZ: false
            EngineVersion: "15.3"
            AutoMinorVersionUpgrade: false
            LicenseModel: "postgresql-license"
            PubliclyAccessible: false
            StorageType: "gp2"
            Port: !GetAtt RDSDBInstance2.Endpoint.Port
            StorageEncrypted: false
            CopyTagsToSnapshot: true
            MonitoringInterval: 0
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: false
            DeletionProtection: false
            DBSubnetGroupName: !Sub "default-${EC2VPC2}"
            VPCSecurityGroups: 
              - "sg-091c2c81da41dfb24"
            MaxAllocatedStorage: 1000
            DBParameterGroupName: "default.postgres15"
            OptionGroupName: "default:postgres-15"
            CACertificateIdentifier: "rds-ca-2019"

    RDSDBInstance2:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: !Sub "${CognitoUserPoolDomain}onpremise"
            AllocatedStorage: 20
            DBInstanceClass: "db.t3.micro"
            Engine: "postgres"
            MasterUsername: "Proyecto4"
            MasterUserPassword: "REPLACEME"
            PreferredBackupWindow: "03:13-03:43"
            BackupRetentionPeriod: 0
            AvailabilityZone: !GetAtt EC2Subnet.AvailabilityZone
            PreferredMaintenanceWindow: "fri:10:21-fri:10:51"
            MultiAZ: false
            EngineVersion: "15.3"
            AutoMinorVersionUpgrade: false
            LicenseModel: "postgresql-license"
            PubliclyAccessible: true
            StorageType: "gp2"
            Port: 5432
            StorageEncrypted: false
            CopyTagsToSnapshot: true
            MonitoringInterval: 0
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: false
            DeletionProtection: false
            DBSubnetGroupName: "gruposubredes_onpremise"
            VPCSecurityGroups: 
              - "sg-0deb97ae193dc15d9"
            DBParameterGroupName: "default.postgres15"
            OptionGroupName: "default:postgres-15"
            CACertificateIdentifier: "rds-ca-2019"

    RDSDBSubnetGroup:
        Type: "AWS::RDS::DBSubnetGroup"
        Properties:
            DBSubnetGroupDescription: "gruposubred_backupDB"
            DBSubnetGroupName: "gruposubred_backupdb"
            SubnetIds: 
              - "subnet-0ffc3cb17f3c57581"
              - "subnet-00b800890c4e709a1"
              - "subnet-0b4c9f3a83f823b6d"

    RDSDBSubnetGroup2:
        Type: "AWS::RDS::DBSubnetGroup"
        Properties:
            DBSubnetGroupDescription: "gruposubredes_onpremise"
            DBSubnetGroupName: "gruposubredes_onpremise"
            SubnetIds: 
              - !Ref EC2Subnet2
              - !Ref EC2Subnet4
              - !Ref EC2Subnet6

    EC2Subnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet6.AvailabilityZone
            CidrBlock: "198.240.0.0/28"
            VpcId: !Ref EC2VPC2
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_Backup1"

    EC2Subnet2:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet5.AvailabilityZone
            CidrBlock: "10.0.0.16/28"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_onpremise2"

    EC2Subnet3:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet4.AvailabilityZone
            CidrBlock: "198.240.0.32/28"
            VpcId: !Ref EC2VPC2
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_Backup3"

    EC2Subnet4:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}c"
            CidrBlock: "10.0.0.32/28"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_onpremise3"

    EC2Subnet5:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}b"
            CidrBlock: "198.240.0.16/28"
            VpcId: !Ref EC2VPC2
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_Backup2"

    EC2Subnet6:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}a"
            CidrBlock: "10.0.0.0/28"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "subred_onpremise1"

    EC2InternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags: 
              - 
                Key: "Name"
                Value: "internet_gateway_on_premise"

    EC2RouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC2

    EC2RouteTable2:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC2
            Tags: 
              - 
                Key: "Name"
                Value: "tablaenrutamiento_backup"

    EC2RouteTable3:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "route_on_premise"

    EC2Route:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: !GetAtt EC2VPC.CidrBlock
            VpcPeeringConnectionId: "pcx-0abebd4b2a61a8ad8"
            RouteTableId: !Ref EC2RouteTable2

    EC2Route2:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: !GetAtt EC2VPC2.CidrBlock
            VpcPeeringConnectionId: "pcx-0abebd4b2a61a8ad8"
            RouteTableId: !Ref EC2RouteTable3

    EC2Route3:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref EC2InternetGateway
            RouteTableId: !Ref EC2RouteTable3

    ApiGatewayRestApi:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            Name: "MetodoOnPremiseGet"
            ApiKeySourceType: "HEADER"
            EndpointConfiguration: 
                Types: 
                  - "REGIONAL"

    ApiGatewayAuthorizer:
        Type: "AWS::ApiGateway::Authorizer"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            Name: "Proyecto4"
            Type: "COGNITO_USER_POOLS"
            ProviderARNs: 
              - !GetAtt CognitoUserPool.Arn
            AuthType: "cognito_user_pools"
            IdentitySource: "method.request.header.auth"

    CognitoUserPool:
        Type: "AWS::Cognito::UserPool"
        Properties:
            UserPoolName: "Proyecto4"
            Policies: 
                PasswordPolicy: 
                    MinimumLength: 8
                    RequireUppercase: false
                    RequireLowercase: false
                    RequireNumbers: false
                    RequireSymbols: false
                    TemporaryPasswordValidityDays: 7
            LambdaConfig: {}
            Schema: 
              - 
                Name: "sub"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: false
                Required: true
                StringAttributeConstraints: 
                    MinLength: "1"
                    MaxLength: "2048"
              - 
                Name: "name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "given_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "family_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "middle_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "nickname"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "preferred_username"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "profile"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "picture"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "website"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "email"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: true
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "email_verified"
                AttributeDataType: "Boolean"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
              - 
                Name: "gender"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "birthdate"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "10"
                    MaxLength: "10"
              - 
                Name: "zoneinfo"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "locale"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "phone_number"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "phone_number_verified"
                AttributeDataType: "Boolean"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
              - 
                Name: "address"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "updated_at"
                AttributeDataType: "Number"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                NumberAttributeConstraints: 
                    MinValue: "0"
            AutoVerifiedAttributes: 
              - "email"
            AliasAttributes: 
              - "preferred_username"
            MfaConfiguration: "OFF"
            EmailConfiguration: 
                EmailSendingAccount: "COGNITO_DEFAULT"
            AdminCreateUserConfig: 
                AllowAdminCreateUserOnly: false
            UserPoolTags: {}
            AccountRecoverySetting: 
                RecoveryMechanisms: 
                  - 
                    Priority: 1
                    Name: "verified_email"
            UsernameConfiguration: 
                CaseSensitive: false
            VerificationMessageTemplate: 
                DefaultEmailOption: "CONFIRM_WITH_CODE"

    CognitoUserPoolClient:
        Type: "AWS::Cognito::UserPoolClient"
        Properties:
            UserPoolId: !Ref CognitoUserPool
            ClientName: !Ref CognitoUserPoolDomain
            RefreshTokenValidity: 60
            ReadAttributes: 
              - "address"
              - "birthdate"
              - "email"
              - "email_verified"
              - "family_name"
              - "gender"
              - "given_name"
              - "locale"
              - "middle_name"
              - "name"
              - "nickname"
              - "phone_number"
              - "phone_number_verified"
              - "picture"
              - "preferred_username"
              - "profile"
              - "updated_at"
              - "website"
              - "zoneinfo"
            WriteAttributes: 
              - "address"
              - "birthdate"
              - "email"
              - "family_name"
              - "gender"
              - "given_name"
              - "locale"
              - "middle_name"
              - "name"
              - "nickname"
              - "phone_number"
              - "picture"
              - "preferred_username"
              - "profile"
              - "updated_at"
              - "website"
              - "zoneinfo"
            ExplicitAuthFlows: 
              - "ALLOW_CUSTOM_AUTH"
              - "ALLOW_REFRESH_TOKEN_AUTH"
              - "ALLOW_USER_PASSWORD_AUTH"
              - "ALLOW_USER_SRP_AUTH"
            PreventUserExistenceErrors: "ENABLED"
            SupportedIdentityProviders: 
              - "COGNITO"
            CallbackURLs: 
              - !Sub "https://${CognitoUserPoolDomain}-interfaz.s3.amazonaws.com/prueba.html"
            AllowedOAuthFlows: 
              - "implicit"
            AllowedOAuthScopes: 
              - "aws.cognito.signin.user.admin"
              - "email"
              - "openid"
              - "phone"
              - "profile"
            AllowedOAuthFlowsUserPoolClient: true
            IdTokenValidity: 5
            AccessTokenValidity: 5
            TokenValidityUnits: 
                AccessToken: "minutes"
                IdToken: "minutes"
                RefreshToken: "minutes"

    CognitoUserPoolUser:
        Type: "AWS::Cognito::UserPoolUser"
        Properties:
            Username: "jose"
            UserPoolId: !Ref CognitoUserPool
            UserAttributes: 
              - 
                Name: "sub"
                Value: "5d81fc19-06d5-4a6a-8bfd-e8a0d7fd9f6d"
              - 
                Name: "email_verified"
                Value: "true"
              - 
                Name: "email"
                Value: "victorjguzman17@gmail.com"

    CognitoUserPoolGroup:
        Type: "AWS::Cognito::UserPoolGroup"
        Properties:
            GroupName: !Sub "grupo_${CognitoUserPoolDomain}"
            UserPoolId: !Ref CognitoUserPool
            Precedence: 1
            RoleArn: !GetAtt IAMRole2.Arn

    CognitoUserPoolDomain:
        Type: "AWS::Cognito::UserPoolDomain"
        Properties:
            Domain: "proyecto4"
            UserPoolId: !Ref CognitoUserPool

    IAMRole:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "ParaLambda"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonRDSDataFullAccess"
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            Description: "Allows Lambda functions to call AWS services on your behalf."

    IAMRole2:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "Para_cognito_apigatewaycall"
            AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"cognito-identity.amazonaws.com\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"cognito-identity.amazonaws.com:aud\":\"${CognitoUserPool}\"}}}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator"
              - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
            Description: ""

    IAMRole3:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "rds-proxy-role-1697511196501"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"rds.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Sub "arn:aws:iam::${AWS::AccountId}:policy/service-role/rds-proxy-policy-1697511196501"
            Description: "Allows RDS Proxy access to database connection credentials"

    IAMRole4:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "rds-monitoring-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"monitoring.rds.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "Insertardatos"
            Handler: "state_handler.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/Insertardatos-680fddd1-119e-4136-beb1-1eb991fa0f81"
                S3ObjectVersion: "xeC76dfAmvj_ivtPoEF60clcF92M_.WY"
            MemorySize: 128
            Role: !GetAtt IAMRole.Arn
            Runtime: "python3.8"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            VpcConfig: 
                SubnetIds: 
                  - !Ref EC2Subnet2
                  - !Ref EC2Subnet4
                  - !Ref EC2Subnet6
                SecurityGroupIds: 
                  - "sg-0c95f3ab35428794e"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:llamadaPostgres:1"
            EphemeralStorage: 
                Size: 512

    LambdaFunction2:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "acceso${CognitoUserPoolDomain}"
            FunctionName: "pruebapostgres"
            Handler: "state_handler.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/pruebapostgres-8d8a4566-7ef1-44f6-b74b-f536e2e5b11e"
                S3ObjectVersion: "QMWMvGUwp61vbDjttzfKHQD56x_cs_Tk"
            MemorySize: 128
            Role: !GetAtt IAMRole.Arn
            Runtime: "python3.8"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            VpcConfig: 
                SubnetIds: 
                  - !Ref EC2Subnet2
                  - !Ref EC2Subnet4
                  - !Ref EC2Subnet6
                SecurityGroupIds: 
                  - "sg-0c95f3ab35428794e"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:llamadaPostgres:1"
            EphemeralStorage: 
                Size: 512

    LambdaFunction3:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "CrearTablaBackup"
            Handler: "state_handler.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/CrearTablaBackup-b14418c6-6683-42c5-bdb5-cc8dac8f3b60"
                S3ObjectVersion: "Jb16vOZfdD2sTXNgzVFQYacZ11_Xqjam"
            MemorySize: 128
            Role: !GetAtt IAMRole.Arn
            Runtime: "python3.8"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            VpcConfig: 
                SubnetIds: 
                  - !Ref EC2Subnet2
                  - !Ref EC2Subnet4
                  - !Ref EC2Subnet6
                SecurityGroupIds: 
                  - "sg-0c95f3ab35428794e"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:llamadaPostgres:1"
            EphemeralStorage: 
                Size: 512

    LambdaPermission:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !GetAtt LambdaFunction.Arn
            Principal: "apigateway.amazonaws.com"
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:114oeeymz9/*/OPTIONS/ApiOnpremiseGET"

    LambdaPermission2:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !GetAtt LambdaFunction2.Arn
            Principal: "apigateway.amazonaws.com"
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/GET/"

    LambdaLayerVersion:
        Type: "AWS::Lambda::LayerVersion"
        Properties:
            Description: ""
            CompatibleRuntimes: 
              - "python3.8"
              - "python3.9"
            LayerName: "llamadaPostgres"
            Content: 
                S3Bucket: "prod-iad-c1-djusa-layers"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/llamadaPostgres-b4edd1d8-8780-4c4e-a684-7bce2fd40973"

    CloudWatchAlarm:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: "Llamada a backup"
            AlarmDescription: "Saludos, se activo la funcion de back up."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:Cantidad_de_llamadas"
            MetricName: "Invocations"
            Namespace: "AWS/Lambda"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "FunctionName"
                Value: !Ref LambdaFunction
              - 
                Name: "Resource"
                Value: !Ref LambdaFunction
            Period: 60
            EvaluationPeriods: 1
            DatapointsToAlarm: 1
            Threshold: 1
            ComparisonOperator: "GreaterThanOrEqualToThreshold"
            TreatMissingData: "missing"

    CloudWatchDashboard:
        Type: "AWS::CloudWatch::Dashboard"
        Properties:
            DashboardName: "Proyecto4"
            DashboardBody: !Sub "{\"widgets\":[{\"height\":7,\"width\":9,\"y\":2,\"x\":0,\"type\":\"metric\",\"properties\":{\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/RDS\",\"CPUUtilization\",\"EngineName\",\"postgres\",{\"period\":60,\"region\":\"${AWS::Region}\"}]],\"region\":\"${AWS::Region}\",\"start\":\"-PT1H\",\"end\":\"P0D\",\"period\":300,\"annotations\":{\"horizontal\":[{\"label\":\"Limite de utilizacion de la CPU\",\"value\":3.5}]}}},{\"height\":2,\"width\":9,\"y\":0,\"x\":0,\"type\":\"text\",\"properties\":{\"markdown\":\"# On premise \\n\"}},{\"height\":2,\"width\":12,\"y\":0,\"x\":9,\"type\":\"text\",\"properties\":{\"markdown\":\"# Back up\\n\"}},{\"height\":6,\"width\":6,\"y\":2,\"x\":9,\"type\":\"metric\",\"properties\":{\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/RDS\",\"DatabaseConnections\",\"DBInstanceIdentifier\",\"${RDSDBInstance}\",{\"period\":60}]],\"region\":\"${AWS::Region}\"}},{\"height\":1,\"width\":6,\"y\":9,\"x\":0,\"type\":\"text\",\"properties\":{\"markdown\":\"# Lambda copiado \\n\"}},{\"height\":3,\"width\":6,\"y\":10,\"x\":0,\"type\":\"metric\",\"properties\":{\"sparkline\":true,\"view\":\"singleValue\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"${LambdaFunction2}\"]],\"region\":\"${AWS::Region}\"}}]}"

    LogsLogGroup:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"

    LogsLogGroup2:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"

    LogsLogGroup3:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: "/aws/lambda/prueba_cognito"

    LogsLogGroup4:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"

